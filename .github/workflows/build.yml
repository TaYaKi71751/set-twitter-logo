on:
  push:
  workflow_dispatch:
env:
  XCODE_MAC_SCHEME: "ChangeBlueBirdLogoBack (macOS)"
  XCODE_IOS_SCHEME: "ChangeBlueBirdLogoBack (iOS)"
  XCODE_PROJECT: "ChangeBlueBirdLogoBack.xcodeproj"
  XCODE_APP_NAME: "ChangeBlueBirdLogoBack.app"

jobs:
  build:
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@main
      with:
        node-version: 16
    - run: |
        mkdir -p build
    - run: |
        sudo xcode-select --install || echo "Xcode command line tools already installed"
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer || echo "Xcode command line tools already selected"
    - run: |
        xcodebuild -project "${XCODE_PROJECT}" \
          -scheme "${XCODE_IOS_SCHEME}" \
          -configuration Release \
          -destination 'platform=iOS Simulator,name=iPhone 16' \
          -derivedDataPath 'build/ios' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_ENTITLEMENTS="" \
          clean build
        cd "build/ios/Build/Products/Release-iphonesimulator/"
        mkdir -p Payload
        mv "${XCODE_APP_NAME}" Payload/Runner.app
        zip -r ../../../../../build/ios.zip "Payload/Runner.app"
        cd ../../../../../
        mv build/ios.zip build/ios.ipa
    - run: |
        xcodebuild -project "${XCODE_PROJECT}" \
          -scheme "${XCODE_MAC_SCHEME}" \
          -configuration Release \
          -destination 'platform=macOS' \
          -derivedDataPath 'build/mac' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_ENTITLEMENTS="" \
          clean build
        cd "build/mac/Build/Products/Release/"
        zip -r ../../../../../build/mac.zip "${XCODE_APP_NAME}"
        cd ../../../../../
    # Update manifest
    - run: |
        cp "./Shared (Extension)/Resources/manifest.json" "./Shared (Extension)/Resources/manifest-v3.json"
        node << EOF
          const fs = require('fs');
          let json = JSON.parse(fs.readFileSync('./Shared (Extension)/Resources/manifest.json'));
          let message = JSON.parse(fs.readFileSync('./Shared (Extension)/Resources/_locales/en/messages.json'));
          json.name = message['extension_name'].message;
          json.description = message['extension_description'].message;
          json.default_locale = undefined;
          json.background = undefined;
          json.action = undefined;
          json.permissions = undefined;
          json.manifest_version = 2;
          fs.writeFileSync('./Shared (Extension)/Resources/manifest-v2.json',JSON.stringify(json));
          json.manifest_version = 3;
          fs.writeFileSync('./Shared (Extension)/Resources/manifest-v3.json',JSON.stringify(json));
        EOF
    - uses: corcc/publish@node
      with:
        TZ: 'Asia/Seoul'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: Update manifest*.json
    
    # v2
    - run: |
        rm "./Shared (Extension)/Resources/manifest.json"
        cp "./Shared (Extension)/Resources/manifest-v2.json" "./Shared (Extension)/Resources/manifest.json"
    # pack zip and read manifest, can be reused in the following steps
    - id: packExtensionDir-v2
      uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
      with:
        extensionDir: "./Shared (Extension)/Resources"
        zipFilePath: 'build/extension-v2.zip'
        
    - uses: cardinalby/webext-buildtools-chrome-crx-action@v2
      with:
        # zip file made at the packExtensionDir step
        zipFilePath: 'build/extension-v2.zip'
        crxFilePath: 'build/extension-v2.crx'
        privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}

    #v3
    - run: |
        rm "./Shared (Extension)/Resources/manifest.json"
        cp "./Shared (Extension)/Resources/manifest-v3.json" "./Shared (Extension)/Resources/manifest.json"
    # pack zip and read manifest, can be reused in the following steps
    - id: packExtensionDir-v3
      uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
      with:
        extensionDir: "./Shared (Extension)/Resources"
        zipFilePath: 'build/extension-v3.zip'
        
    - uses: cardinalby/webext-buildtools-chrome-crx-action@v2
      with:
        # zip file made at the packExtensionDir step
        zipFilePath: 'build/extension-v3.zip'
        crxFilePath: 'build/extension-v3.crx'
        privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          LICENSE*
          build/ios.ipa
          build/*.zip
          build/*.crx
    - uses: actions/upload-artifact@v4
      with:
        name: package
        path: |
          build/*.zip
          build/*.crx